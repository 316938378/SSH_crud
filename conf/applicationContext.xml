<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
		
<!-- 1.配置bean的自动扫描与装配 -->
	<context:component-scan base-package="com.java1234.ssh.*"></context:component-scan>
	
<!-- 2.配置数据源 C3P0 -->
	<!-- ①装配外部配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<!-- ②配置C3P0 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	
		<!-- 数据库连接信息  -->
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
	</bean>
	
	
	
<!-- 3.配置SessionFactory（整合Hibernate） -->
		<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
			<property name="dataSource" ref="dataSource"></property>
			<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
			<property name="mappingLocations" value="classpath:com/java1234/ssh/entity/*.hbm.xml" />
		</bean>
		
<!-- 4.配置声明式事务 -->
	<!-- 4.1，配置事务管理器 -->
	<bean id="hibernateTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 4.2，配置基于注解的事务支持-->
	<tx:annotation-driven transaction-manager="hibernateTransactionManager"/>
</beans>
